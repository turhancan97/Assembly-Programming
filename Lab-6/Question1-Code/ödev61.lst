;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 6.05.2020 20:45:22
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF3C  	GOTO        120
_interrupt:
;_dev61.c,2 :: 		void interrupt() // Interrupt
0x0008	0xF015C000  	MOVFF       R0, 21
;_dev61.c,4 :: 		if(INT0IF_bit==1)
0x000C	0xA2F2      	BTFSS       INT0IF_bit, BitPos(INT0IF_bit+0) 
0x000E	0xD028      	BRA         L_interrupt0
;_dev61.c,6 :: 		cntr++;
0x0010	0x4A16      	INFSNZ      _cntr, 1 
0x0012	0x2A17      	INCF        _cntr+1, 1 
;_dev61.c,7 :: 		if(cntr>=10) // Turning on LED after 10 packages
0x0014	0x0E00      	MOVLW       0
0x0016	0x5C17      	SUBWF       _cntr+1, 0 
0x0018	0xE102      	BNZ         L__interrupt8
0x001A	0x0E0A      	MOVLW       10
0x001C	0x5C16      	SUBWF       _cntr, 0 
L__interrupt8:
0x001E	0xE320      	BNC         L_interrupt1
;_dev61.c,9 :: 		PORTb.RB1=1;        // LED = 1
0x0020	0x8281      	BSF         PORTB, 1 
;_dev61.c,10 :: 		Delay_ms(5000);     // Wait 5sec
0x0022	0x0E33      	MOVLW       51
0x0024	0x6E0B      	MOVWF       R11, 0
0x0026	0x0EBB      	MOVLW       187
0x0028	0x6E0C      	MOVWF       R12, 0
0x002A	0x0EDF      	MOVLW       223
0x002C	0x6E0D      	MOVWF       R13, 0
L_interrupt2:
0x002E	0x2E0D      	DECFSZ      R13, 1, 0
0x0030	0xD7FE      	BRA         L_interrupt2
0x0032	0x2E0C      	DECFSZ      R12, 1, 0
0x0034	0xD7FC      	BRA         L_interrupt2
0x0036	0x2E0B      	DECFSZ      R11, 1, 0
0x0038	0xD7FA      	BRA         L_interrupt2
0x003A	0x0000      	NOP
0x003C	0x0000      	NOP
;_dev61.c,11 :: 		PORTB.RB1=0;        // LED = 0
0x003E	0x9281      	BCF         PORTB, 1 
;_dev61.c,12 :: 		Delay_ms(1000);     // wait 1sec
0x0040	0x0E0B      	MOVLW       11
0x0042	0x6E0B      	MOVWF       R11, 0
0x0044	0x0E26      	MOVLW       38
0x0046	0x6E0C      	MOVWF       R12, 0
0x0048	0x0E5D      	MOVLW       93
0x004A	0x6E0D      	MOVWF       R13, 0
L_interrupt3:
0x004C	0x2E0D      	DECFSZ      R13, 1, 0
0x004E	0xD7FE      	BRA         L_interrupt3
0x0050	0x2E0C      	DECFSZ      R12, 1, 0
0x0052	0xD7FC      	BRA         L_interrupt3
0x0054	0x2E0B      	DECFSZ      R11, 1, 0
0x0056	0xD7FA      	BRA         L_interrupt3
0x0058	0x0000      	NOP
0x005A	0x0000      	NOP
;_dev61.c,13 :: 		cntr=0;              // cntr = 0
0x005C	0x6A16      	CLRF        _cntr 
0x005E	0x6A17      	CLRF        _cntr+1 
;_dev61.c,14 :: 		}
L_interrupt1:
;_dev61.c,15 :: 		}
L_interrupt0:
;_dev61.c,16 :: 		INT0IF_bit=0;
0x0060	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;_dev61.c,17 :: 		}
L_end_interrupt:
L__interrupt7:
0x0062	0xF000C015  	MOVFF       21, R0
0x0066	0x0011      	RETFIE      1
; end of _interrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0068	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x006A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x006E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0070	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0072	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0074	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0076	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0078	0x6A16      	CLRF        _cntr 
0x007A	0x6A17      	CLRF        23 
;_dev61.c,18 :: 		void main() {
;_dev61.c,19 :: 		ANSELB=0;               // Input - Output Configuration
0x007C	0x010F      	MOVLB       15
0x007E	0x6B39      	CLRF        ANSELB, 1
;_dev61.c,20 :: 		ANSELD=0;
0x0080	0x6B3B      	CLRF        ANSELD, 1
;_dev61.c,21 :: 		TRISB=0b00000001;
0x0082	0x0E01      	MOVLW       1
0x0084	0x6E93      	MOVWF       TRISB 
;_dev61.c,22 :: 		TRISD=0;
0x0086	0x6A95      	CLRF        TRISD 
;_dev61.c,24 :: 		INTEDG0_bit=0;          // Interrupt Setup
0x0088	0x9CF1      	BCF         INTEDG0_bit, BitPos(INTEDG0_bit+0) 
;_dev61.c,25 :: 		INT0IF_bit=0;          // clear
0x008A	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;_dev61.c,26 :: 		INT0IE_bit=1;         // enable
0x008C	0x88F2      	BSF         INT0IE_bit, BitPos(INT0IE_bit+0) 
;_dev61.c,27 :: 		GIE_bit=1;
0x008E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;_dev61.c,29 :: 		while(1)
L_main4:
;_dev61.c,31 :: 		PORTD=cntr; // To show how many packages we counted
0x0090	0xFF83C016  	MOVFF       _cntr, PORTD
;_dev61.c,32 :: 		}
0x0094	0xD7FD      	BRA         L_main4
;_dev61.c,33 :: 		}
L_end_main:
0x0096	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [96]    _interrupt
0x0068      [16]    ___CC2DW
0x0078      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _cntr
0x0F39       [1]    ANSELB
0x0F3B       [1]    ANSELD
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    INTEDG0_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
